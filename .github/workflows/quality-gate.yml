name: ðŸ”¥ REVOLUTIONARY QUALITY GATE & AUTOMATION

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 6 * * *'  # Daily revolutionary content generation at 6 AM UTC
  workflow_dispatch:
    inputs:
      category:
        description: 'Category for revolutionary generation'
        required: false
        default: 'self-help'
        type: choice
        options:
        - self-help
        - business
        - technology

jobs:
  quality-enforcement:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: ESLint Enforcement (NO MERCY)
      run: npm run lint
    
    - name: Prettier Format Check (MANDATORY)
      run: npm run format:check
    
    - name: Test Execution (MUST PASS)
      run: npm test
    
    - name: Build Verification (ZERO TOLERANCE)
      run: npm run build
    
    - name: Security Audit (PARANOID LEVEL)
      run: npm audit --audit-level high
      
  revolutionary-generation:
    needs: quality-enforcement
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js for Revolution
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install Revolutionary Dependencies
      run: npm ci
    
    - name: ðŸ”¥ Execute Revolutionary Content Generation
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      run: |
        CATEGORY="${{ github.event.inputs.category || 'self-help' }}"
        echo "ðŸ”¥ Starting revolutionary generation for category: $CATEGORY"
        npm run quick-revolution $CATEGORY
        
    - name: ðŸ“Š Revolutionary Quality Assessment
      run: |
        echo "ðŸ“Š Assessing revolutionary impact..."
        if [ -d "docs/revolutionary-books" ]; then
          find docs/revolutionary-books -name "*.md" -type f | wc -l
          echo "Revolutionary books generated successfully"
        else
          echo "No revolutionary content detected"
        fi
    
    - name: ðŸ’¥ Commit Revolutionary Content
      run: |
        git config user.name "Revolutionary Bot"
        git config user.email "revolution@living-book-engine.ai"
        git add docs/revolutionary-books/
        if git diff --staged --quiet; then
          echo "No new revolutionary content to commit"
        else
          git commit -m "ðŸ”¥ Automated revolutionary content generation - $(date +%Y-%m-%d)
          
          Industry disruption content automatically generated by Revolutionary System.
          
          ðŸ¤– Generated with GitHub Actions"
          git push
        fi

  deployment-gate:
    needs: quality-enforcement
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: ðŸ”¥ Revolutionary System Deployment Authorization
      run: echo "ðŸ”¥ REVOLUTIONARY DECREE - DEPLOYMENT AUTHORIZED FOR INDUSTRY DISRUPTION"